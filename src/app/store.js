import { configureStore } from "@reduxjs/toolkit"
import { apiSlice } from './api/apiSlice'
import { setupListeners } from "@reduxjs/toolkit/query"
import authReducer from '../features/auth/authSlice'


// Redux store
// reducers = function that receives the current state and an action object, updates new state, and returns it
// slices = splitting up redux state objects into multiple slices of state; collection of reducer logic and actions for a single feature
//
// Reducers coming from createApi(): [apiSlice.reducerPath]: apiSlice.reducer,
//   reducerPath is a configuration option of createApi() that controls the namespace under which the generated RTK Query reducer will be placed in the Redux Store. Default is "api"
// Normal reducer definition: auth: authReducer,
// apiSlice.middleware is the collection of middleware generated by RTK Query to handle the execution of queries and mutations
export const store = configureStore({
    reducer: {
        [apiSlice.reducerPath]: apiSlice.reducer,
        auth: authReducer,
    },
    middleware: getDefaultMiddleware =>
        getDefaultMiddleware().concat(apiSlice.middleware),
    // DEPLOY: set to true for dev, set to false for deployment; default is true
    devTools: false
})

setupListeners(store.dispatch)